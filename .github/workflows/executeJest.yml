name: "Execute LWC Component Tests Using Jest"
on: push

jobs:
  lwc-component-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "Setup Node.js"
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: 'Setup jq'
        uses: dcarbone/install-jq-action@v2.0.2
        with:
          version: '1.7'
          force: true

      # Speed up subsequent runs with caching
      - name: "Cache node modules"
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      # Install required deps for action
      - name: "Install Dependencies"
        run: npm install

      # Execute LWC component tests
      - name: "Run the tests"
        run: |
            npm run test:unit:coverage:annotation

      - name: "Extract Test Results"
        if: always()
        run: |
            if test -f ./test-results/jest-result.json; then
              summaryMessage=$(jq '(.testResults.[] | .message)' ./test-results/jest-result.json);
              # summaryWithoutQuote=$summaryMessage| sed 's/\\//g';
              if [ $(echo "$summaryMessage" | sed 's/\\//g') = '""' ]; then
                summaryMessage="All test executions ✅ passed";
              fi
              testResults=$(jq -r '"|TEST NAME\t|OUTCOME\t|RUNTIME (MS)\t|","|------------------------------\t|----------\t|----------\t|",(.testResults.[].assertionResults.[] | "|\(if .status == "passed" then "✅" else "❌" end)\(.fullName)\t|\(.status)\t|\(.duration)\t|")' ./test-results/jest-result.json | column -t -s $'\t');
              echo -e "### <ins>Test Summary</ins> \n\n${summaryMessage} \n\n### <ins>Test Results</ins> \n\n${testResults}" | sed 's/\\//g' > ./test-results/jest-result.md
              cat ./test-results/jest-result.md >> $GITHUB_STEP_SUMMARY
            else
              echo "No jest JSON file exists to parse"
            fi
            